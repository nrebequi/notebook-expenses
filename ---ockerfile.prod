# Build stage
FROM composer:latest AS composer

WORKDIR /app
COPY . /app
RUN composer install --no-dev --optimize-autoloader

# Production stage
FROM php:8.3-fpm

# Install minimal required dependencies
RUN apt-get update && apt-get install -y \
    nginx \
    sqlite3 \
    libsqlite3-dev \
    && rm -rf /var/lib/apt/lists/*

# Install PHP extensions
RUN docker-php-ext-install pdo_sqlite

# Configure PHP for debugging
RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini" && \
    echo "display_errors = On" >> "$PHP_INI_DIR/php.ini" && \
    echo "display_startup_errors = On" >> "$PHP_INI_DIR/php.ini" && \
    echo "error_reporting = E_ALL" >> "$PHP_INI_DIR/php.ini" && \
    echo "log_errors = On" >> "$PHP_INI_DIR/php.ini" && \
    echo "error_log = /var/www/html/storage/logs/laravel.log" >> "$PHP_INI_DIR/php.ini"

WORKDIR /var/www/html

# Copy files
COPY --from=composer /app /var/www/html
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf
COPY docker/start.sh /start.sh

# Create storage structure
RUN mkdir -p storage/framework/{sessions,views,cache} \
    && mkdir -p storage/logs \
    && touch storage/logs/laravel.log \
    && chown -R www-data:www-data /var/www/html \
    && chmod -R 775 storage \
    && chmod -R 775 bootstrap/cache \
    && chmod +x /start.sh

EXPOSE 8080

CMD ["/start.sh"]